#
# Copyright 2022-2023 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#################################################################################
#                           SLEEPER INSTANCE PROPERTIES                         #
#################################################################################

###################
# Template Values #
###################

# AWS account number
sleeper.account=changeme

# AWS region to deploy to
sleeper.region=changeme

# A string to uniquely identify this deployment
sleeper.id=changeme

# The S3 bucket containing your jar files
sleeper.jars.bucket=changeme

# The name of the repository for the compaction container. The Docker image from the compaction-job-execution module
# should have been uploaded to an ECR repository of this name in this account.
sleeper.compaction.repo=changeme

# The name of the repository for the ingest container. The Docker image from the ingest module should have been
# uploaded to an ECR repository of this name in this account.
sleeper.ingest.repo=changeme

# The name of the bulk import repo containing spark and bulk import code
sleeper.bulk.import.eks.repo=changeme

# The id of the VPC to deploy to
sleeper.vpc=changeme

# A comma separated list of subnets to deploy to. ECS tasks will be run across multiple subnets. EMR
# clusters will be deployed in a subnet chosen when the cluster is created.
sleeper.subnets=changeme

##################
# Default Values #
##################

# Logging level for sleeper classes
sleeper.logging.level=debug

# The optional stacks to deploy - DataAndMetadata & Topic are also included.
sleeper.optional.stacks=SystemTestStack,CompactionStack,IngestStack,PartitionSplittingStack

# Whether to keep the sleeper table bucket, Dynamo tables related to tables and query results bucket or not.
sleeper.retain.infra.after.destroy=false

# Partitions with more than the following number of records in will be split
sleeper.default.partition.splitting.threshold=20

########################################################################################
#                              System Test Properties                                  #
########################################################################################

# The ingest mode to write random data. This should be either 'direct', 'queue', or 'generate_only'.
# 'Direct' means that the data is written directly using an ingest coordinator.
# 'Queue' means that the data is written to a Parquet file and an ingest job is created and posted to the ingest queue.
# 'Generate_only' means that the data is written to a Parquet file in the table data bucket, but the 
# file is not ingested. The ingest will have to be performed manually in a seperate step.
sleeper.systemtest.ingest.mode=direct

# The number of containers that write random data
sleeper.systemtest.writers=1

# The number of random records that each container should write
sleeper.systemtest.records-per-writer=100

# The image in ECR used for writing random data to the system
sleeper.systemtest.repo=changeme
