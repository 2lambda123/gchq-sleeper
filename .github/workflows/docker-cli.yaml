on:
  workflow_call:
    inputs:
      pushImages:
        default: false
        required: false
        type: boolean

env:
  DOCKER_PLATFORMS: linux/amd64,linux/arm64/v8
  DEPENDENCIES_IMAGE: localhost:5000/sleeper-dependencies:current
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: java/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Resolve dependencies
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -Dmaven.repo.local=.m2/repository
        working-directory: ./java
      - name: Maven build
        run: ./scripts/build/buildForTest.sh package -Pquick --batch-mode -Dmaven.repo.local=.m2/repository
      - name: Environment Maven build
        run: ./scripts/cli/environment/buildMaven.sh package -Pquick --batch-mode -Dmaven.repo.local=../.m2/repository
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Plan build
        run: |
          ./.github/scripts/planCliBuild.sh \
            "${{ github.repository_owner }}" \
            "${{ github.ref }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker dependencies
        uses: docker/build-push-action@v4
        with:
          context: ./scripts/cli/dependencies
          push: true
          sbom: false
          provenance: false
          tags: ${{ env.DEPENDENCIES_IMAGE }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Build builder image
        uses: docker/build-push-action@v4
        with:
          context: ./scripts/cli/builder
          push: ${{ inputs.pushImages }}
          sbom: false
          provenance: false
          tags: ${{ env.BUILDER_PUSH_TAG }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          build-args: DEPENDENCIES_IMAGE=${{ env.DEPENDENCIES_IMAGE }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Build environment image
        uses: docker/build-push-action@v4
        with:
          context: ./scripts/cli/environment
          push: ${{ inputs.pushImages }}
          sbom: false
          provenance: false
          tags: ${{ env.ENV_PUSH_TAG }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          build-args: DEPENDENCIES_IMAGE=${{ env.DEPENDENCIES_IMAGE }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Build deployment image
        uses: docker/build-push-action@v4
        with:
          context: ./scripts
          push: ${{ inputs.pushImages }}
          sbom: false
          provenance: false
          tags: ${{ env.DEPLOY_PUSH_TAG }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          build-args: DEPENDENCIES_IMAGE=${{ env.DEPENDENCIES_IMAGE }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Build devcontainers image
        uses: devcontainers/ci@v0.3
        with:
          push: ${{ inputs.pushImages }}
          imageName: ${{ env.DEVCONTAINER_PUSH_TAG }}
          platform: ${{ env.DOCKER_PLATFORMS }}
      - name: Delete old images
        if: ${{ inputs.pushImages }}
        working-directory: ./java/build
        run: |
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> delete.properties
          echo "organization=${{ github.repository_owner }}" >> delete.properties
          echo "packageNames=$GHCR_PACKAGE_NAMES" >> delete.properties
          echo "ignoreTagsPattern=^(latest|[0-9.]+)$" >> delete.properties
          echo "keepMostRecent=4" >> delete.properties
          mvn compile exec:java -q -e -Dexec.mainClass=sleeper.build.github.api.containers.DeleteGHCRVersions \
            -Dmaven.repo.local=../.m2/repository \
            -Dexec.args=delete.properties \
