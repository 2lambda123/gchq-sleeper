on:
  workflow_call:
    inputs:
      pushImages:
        default: false
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: java/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Resolve dependencies
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -Dmaven.repo.local=.m2/repository
        working-directory: ./java
      - name: Plan build
        run: |
          ./.github/scripts/planCliBuild.sh \
            "${{ github.repository_owner }}" \
            "${{ github.ref }}"
      - name: Maven build
        run: ./scripts/build/buildForTest.sh package -Pquick --batch-mode -Dmaven.repo.local=.m2/repository
      - name: Dependencies Docker build
        run: ./scripts/cli/dependencies/build.sh
      - name: Environment Docker build
        run: |
          ./scripts/cli/local/buildDocker.sh --tag $ENV_IMAGE_NAME \
            --label "git-commit=$GITHUB_SHA" \
            --label "build-url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
      - name: Deployment Docker build
        working-directory: ./scripts
        run: |
          docker build . \
            --tag $DEPLOY_IMAGE_NAME \
            --label "git-commit=$GITHUB_SHA" \
            --label "build-url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
      - name: Log in to registry
        if: ${{ inputs.pushImages }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push images
        if: ${{ inputs.pushImages }}
        run: |
          docker tag $ENV_IMAGE_NAME $ENV_IMAGE_ID:$VERSION
          docker push $ENV_IMAGE_ID:$VERSION
          docker tag $DEPLOY_IMAGE_NAME $DEPLOY_IMAGE_ID:$VERSION
          docker push $DEPLOY_IMAGE_ID:$VERSION
      - name: Delete old images
        if: ${{ inputs.pushImages }}
        working-directory: ./java/build
        run: |
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> delete.properties
          echo "organization=${{ github.repository_owner }}" >> delete.properties
          echo "packageNames=$GHCR_PACKAGE_NAMES" >> delete.properties
          echo "ignoreTagsPattern=^(latest|[0-9.]+)$" >> delete.properties
          echo "keepMostRecent=4" >> delete.properties
          mvn compile exec:java -q -e -Dexec.mainClass=sleeper.build.github.api.containers.DeleteGHCRVersions \
            -Dmaven.repo.local=../.m2/repository \
            -Dexec.args=delete.properties \
